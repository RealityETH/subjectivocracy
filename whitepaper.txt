The Subjectivocracy Whitepaper
Edmund Edgar, 2016-04-20
Last updated 2016-07-27


*** Conceptual Overview ***


Introduction

Blockchain systems provide an effective and well-tested solution for confirming the execution of arbitrary computer code. However, the point at which they mesh with the world beyond the blockchain has produced some unique challenges for crypto-economic systems. 

One manifestation of this problem is known as the Oracle Problem. Smart Contracts often need to reference factual data about the world outside the blockchain on which they reside. If you want to make and settle a contract based on whether it will rain in Tokyo, you ultimately need to know whether it rained in Tokyo. 

Another is more commonly represented as a governance problem. Smart contracts are intended to run trustlessly, but in practice they sometimes contain bugs. Dealing with these bugs can range from the need to replace bad contracts with better ones, to the need to reassign assets held by the contract to undo the damage caused by the operation of the bug. In many cases this will prove impossible, or require a change to be applied to the entire underlying system.

Vitalik Buterin coined the term "Subjectivocracy" to [explain]
https://blog.ethereum.org/2015/02/14/subjectivity-exploitability-tradeoff/

We propose to create a common subjectivocratic layer on top of the Ethereum blockchain using a shared Subjectivocratic Token. Using the token allows contracts to access information about the world beyond the blockchain, including human judgements beyond the domain of code-as-law.


Background: Consensus systems and economic hard forks

Blockchains are designed with the aim that the network should be able to reach agreement on a common ledger, and under normal operation require particular action by participating nodes except for running their software. However, upgrades to blockchain-based consensus systems sometimes involve backwards-incompatible changes, producing "hard forks". If not all participants implement the change, this produces two parallel chains. The chains share a common history, rendering coins spent prior to the fork spendable on both post-fork chains. The two post-fork chains do not recognize each other's transactions, making it possible to spend the same original coins in different ways on each chain.

There is no technical barrier to the creation of incompatible forks. Anyone can attempt to change the rules of a blockchain-based systems. For example, it would be technically straightforward to revise the rules of Bitcoin to increase the issuance of new bitcoins. However, such a change would be ignored by the economic majority: Few people would be interested in transacting on this alternative chain, and nobody would be prepared to trade valuable goods or services in exchange for these coins. The opposite holds for people running forks that reject clearly beneficial changes. For example, when an integer overflow bug was discovered in the Bitcoin that allowed users to award themselves coins, developers forked the system to remove this bug, and coins on the fork that lacked this fix became worthless.

The decision over which fork is more valuable is potentially subjective and may not always have a clear right answer. However, external information such as the market cap can provide objective facts which, although not necessarily always correct, can be used by outside observers to adjudicate between the branches. Participants may also refer to external sources of information - most frequently the opinions of developers - to guide them in choosing which branch to choose.


Subjectivocratic Tokens: A branch for every possible world anybody cares about

The core of our proposal is the Subjectivocratic Token Contract, which is a contract residing on the Ethereum network.

The Subjectivocratic Token Contract acts like a crypto-currency which potentially undergoes an economic hard fork every day, and tracks all the forked versions in a single data structure. Each fork represents a set of facts about the world. The same coins can be sent to different people on different forks. Forks can be created by anyone at minimal cost, so a fork can exist for any set of facts that anyone wants to claim represents reality. Credits and debits are attached to particular forks, and inherited by all their dependents lower down the chain.

The Subjectivocratic Token Contract has no opinion about which branch really reflects reality. It is therefore never wrong and cannot be manipulated. 

Traditionally, a contract dependent on some outcome such as a betting contract or prediction market is expected to have a source for the ultimate result. However, a Subjectivocracy-native contract can settle an outcome simply by sending coins to multiple forks. If Alice bets with Bob that Donald Trump will win the presidential election, competing forks may arise, one claiming that he won and another claiming that he didn't. Rather than attempting to adjudicate this issue, the prediction market can simply pay Alice on the branch that represents Trump winning and pay Bob on the branch that represents Trump losing. The Subjectivocratic Token Contract makes no attempt to choose between between the different branches; It simply allows people to manage how much of the token they would have in each possible world. 

Since coins held on a bogus branch are likely to be worthless and the market will value coins held on the true branch, it is possible to make a functional prediction market without the system ever needing objective confirmation of which branch represents the truth. It is even possible that subsets of users will operate long-lived parallel chains, each with their own self-contained market. For example, religious participants may want to make contracts about acts of divine intervention, which are settled by consensus within their own community, on a branch that they consider valuable but nobody else does.

The process of deciding what constitutes a valuable branch is considered outside the scope of the core Subjectivocratic Token Contract. Any solution will require a process by which many different facts and judgements, many of which are only of interest to a small proportion of participants, can be efficiently settled, and errors and fraud detected and repaired. These social processes are not unique to crypto-currency; Existing judicial systems typically employ multiple tiers, with low-cost social peer-pressure handling the most common cases and increasingly expensive and coercive court systems handling only the cases where each subsequent tier has failed. The trust-based oracle service we have been operating since 2013, Reality Keys, uses a two-step process where data is first published for inspection, then verified on payment of a fee. Martin Koeppelmann's proposed Ultimate Oracle operates this way in a decentralized context, with members of a DAO voting only in cases where they think a mistake has been made, and someone believes that the mistake is likely enough to be rectified by a larger voting panel to justify paying a fee. Successful systems may also employ coordination games like those proposed by Paul Sztorc in the TruthCoin whitepaper and implemented by Augur and HiveMind. Alternatively, the market may prefer simple, quasi-centralized systems with known publishers of data monitored by their competitors and by users with money at stake.

By leaving the choice of this process to the social sphere rather than baking it into the core contract, we allow insights from this evolving field to be easily incorporated into the overall process, while keeping the Subjectivocratic Token contract small and simple. However, we try to avoid participants getting locked into a single solution by making the publishing of alternative branches simple and cheap, so that even minor errors can be corrected by publishing an alternative branch containing corrected data.


An objective view via a decentralized market

We have seen that a an application managing assets denominated in Subjectivocratic Tokens does not need adjudication about which branch is best. However, users of systems denominated external assets may wish to harvest information from the Subjectivocracy, and reference it in their own contracts. Although there may be no ultimate truth about which branch is correct, it is possible to establish an objective fact about which is considered most valuable. This can be accomplished with a decentralized blockchain-native market allowing holders of coins on different forks to trade them. 

Such a market can be manipulated by spending large sums of money buying coins on a bogus branch. To the extent that one of the correct branches is valuable and the market liquid, such manipulation is likely to be expensive and and ultimately profitable to holders of the legitimate branch, who can sell coins to the manipulator while continuing to hold the coins they sold on other branches. Meanwhile, participants in Subjectivocracy-native markets are free to ignore the manipulation and continue operating on the branch they consider correct.


Reaching social agreement about the best branch

As described above, Subjectivocratic Tokens function effectively even without agreement on which is the best branch, and which branch reflects reality. Users can reserve judgement by transacting with the same coins on multiple chains, and external observers can obtain an objective judgement through market price discovery. 

However, it may be convenient for any given community to quickly reach agreement based on a set of objective criteria. 

If some or all branches choose to follow a largely predictable method of establishing facts - for example pulling data from known URLs - participants can run trading bots that automatically buy coins on legitimate blocks and sell coins on bogus ones, providing fast public information about the correct facts.


The social contract

Many aspects of what would constitute approprate reporting behaviour will be subjective, and potentially controversial. Like existing crypto-currencies, this will depend on a social contract which is partially established at the outset, and partially evolves over time.

We propose an initial discussion prior to beginning operation to define the general parameters of the social contract. However, in case of subsequent intractable disagreements the system would sustain multiple competing persistent branches supporting alternative social contracts.


Our prototype

The Subjectivocratic Token Contract is implemented as a contract on the Ethereum network. To provide time for social mechanisms to alert to incorrect branches, and also to limit the length of each chain and make it possible to traverse a chain without excessive gas use, a new branch can only be added to any given chain once in every 24-hour period. There is no limit to how many competing branches can be created within that 24-hour period, and the system is designed such that adding a branch does not result in any additional gas use to a participant unless the participant spends coins on it. Thus the height of the chain is limited to a maximum of one new set of facts per day, but it may have an arbitrary large number of parallel forks.

A new branch point consists of a reference to the previous branch on top of which it builds, and a merkel root representing a merkel tree containing all the facts about which it makes claims. It is assumed the actual data will be stored elsewhere, and the market will not value a branch whose data is not available. The actual storage location of the data is not managed by the Subjectivocratic Token Contract, although we would suggest either another Ethereum contract, if a high proportion of the data is expected to be needed to be read on-chain, or IPFS, if the need to read the data from the blockchain is unusual.

The set of facts represented by a given merkel root can be arbitrarily large. If it is too large for market participants to verify, we would expect them to prefer an alternative branch that they were able to verify.

A branch can deduct coins from balances held on previous blocks and appropriate them as fees. It is assumed that the in the same way the economic majority will not be interested in using a branch which claims that the moon is made of green cheese, it will not be interested in using a branch that arbitrarily appropriates money from its users. For some use-cases it may be worthwhile to also support an additional token, which cannot be arbitrarily appropriated in a fork.

Although branches can only be added daily, transfers of tokens down a chain can be made at any time and confirm in the normal Ethereum block interval. 

Transactions are modelled as a credit or debit at a particular fork point. A transaction is only permitted if the account sending it has sufficient credit working back up the chain from the fork point towards the root. Credits and debits can only be added either at the tip of the tree (like a conventional blockchain system) or at a lower level than the last transaction added by the payer. This restriction allows us to verify that a user has a sufficient balance to make any given payment without considering any credit or debit except the ones from which is directly descended, making gas costs bounded and predictable.
